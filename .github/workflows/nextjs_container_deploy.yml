name: Deploy container image to ECR and static files to S3

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-24.04-arm
    env:
      ECR_REPOSITORY: production/datatech-learing-place
      ECS_CLUSTER: dtlp_prod_common
      ECS_SERVICE: dtlp_prod_nextjs_app
      S3_STATIC_ASSETS_URI: s3://dtlp-prod-static-assets/_next

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ap-northeast-1
          audience: sts.amazonaws.com

      - name: Get dot environment file
        run: |
          aws s3 cp s3://dtlp-prod-secret-files/.env.production.local .env.production.local

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Copy static files from builder
        run: |
          mkdir -p .next/static
          docker cp $(docker create --rm ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest):/app/.next/static .next/static
          
      - name: Upload static files to S3
        run: |
          aws s3 cp .next/static/ ${{ env.S3_STATIC_ASSETS_URI }}/static/ --recursive

      - name: Delete dot environment file
        run: |
          rm -f .env.production.local

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment
